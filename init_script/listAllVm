#!/bin/bash

set -e

true=1
false=0

function help() {
  echo "<usage> $0 <option>"
  echo "options: "
  echo "-a | --all: show all vm runnings or not"
  echo "-r | --running: show running VMs and their interfaces with IP addresses"
  echo "-h | --help: show manual of this command"
}

function check_vm_exist() {
  if [ -z "$1" ]; then
    return $false
  fi

  return $true
}

function get_vm_list() {
  virsh list --all
}

function show_vm_table() {
  local vm_list="$1"

  if [ $(check_vm_exist "$vm_list") ]; then
    echo "No VMs found...exiting"
    exit 1
  fi

  echo "===> VMs found:"
  echo "$vm_list" | awk 'NR > 2 { printf "| %-25s | %-25s |\n", $2, $3 }'
}

function get_running_vm_list() {
  virsh list --name --state-running
}

function process_interface_info() {
  local vm_name="$1"
  local domain_info="$2"

  local has_content=false

  while read -r line; do
    has_content=true
    mac_address=$(echo "$line" | awk '{print $5}')
    interface_name=$(echo "$line" | awk '{print $1}')
    ip_address=$(ip neigh show | awk -v mac="$mac_address" '$5 == mac {print $1}')

    echo "VM: $vm_name, Interface: $interface_name, IP: $ip_address"
  done <<< "$(echo "$domain_info" | tail -n +3)"

  if [ "$has_content" = false ]; then
    echo "No interfaces found for VM: $vm_name"
  fi
}

function show_running_vms_info() {
  local running_vm_list=$(get_running_vm_list)

  if [ "$(check_vm_exist "$running_vm_list")" = $false ]; then
    echo "===> Running VMs and their interfaces with IP addresses:"
    while read -r vm_name; do
      domain_info=$(virsh domiflist "$vm_name" 2>&1)

      if [ $? -ne 0 ]; then
        echo "Error getting interface information for VM: $vm_name"
        echo "Error message: $domain_info"
      else
        process_interface_info "$vm_name" "$domain_info"
      fi
    done <<< "$running_vm_list"
  else
    echo "No running VMs found...exiting"
    exit 1
  fi
}

main() {
  case "$1" in
    -a|--all)
      show_vm_table "$(get_vm_list)"
      ;;
    -r|--running)
      show_running_vms_info
      ;;
    -h|--help)
      help
      ;;
    *)
      echo "Unknown option: $1"
      help
      exit 1
      ;;
  esac
}

main "$@"

